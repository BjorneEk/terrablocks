package TerraBlocks;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Point;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

////////////////////////////////////////////////////////////////////////////
///        @author Gustaf Franz√©n :: https://github.com/BjorneEk;        ///
////////////////////////////////////////////////////////////////////////////

///
/// a panel that displays a players inventory
///
public class Inventory extends javax.swing.JPanel {

	/**
	 * Creates new form Inventory
	 */
	private final ArrayList<Point>         cord      = new ArrayList<>();
	public static ArrayList<InventoryItem> inventory = new ArrayList<>();
	public static ArrayList<Tool>          tools     = new ArrayList<>();

	private String equiped     = "nothing";
	private String equipedTool = "nothing";
	private boolean first      = false;

	public Inventory() {
		tools.add(new Tool("none"));
		initComponents();
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		try {
			updateDisplay(g);
		} catch (IOException ex) {
			Logger.getLogger(Inventory.class.getName()).log(Level.SEVERE, null, ex);
		}
		g.setColor(Color.BLACK);
		Font f = new Font("Dialog", Font.BOLD, 25);
		g.setFont(f);
		g.drawString("Inventory", 40, 150);
		g.drawString("Equiped: " + equiped, 180, 150);
	}

	public void equip(String s) {
		equiped = s;
	}
	public static void setTools(ArrayList<Tool> t){
		tools = t;
	}
	public ArrayList<Tool> getTools(){
		return tools;
	}
	public Tool getTool(int i) {
		return tools.get(i);
	}

	public int nrOfTools() {
		return tools.size();
	}

	public void equipTool(String s) {
		equipedTool = s;
	}

	public void clearInventory() {
		inventory.clear();
	}

	public void clearTools() {
		tools.clear();
	}

	public void addInventory(InventoryItem item) {
		inventory.add(item);
	}

	public static void addTool(Tool tool) {
		tools.add(tool);
	}
	
	public static void removeTool(String s){
		for (int i = 0; i < tools.size(); i++) {
			if (tools.get(i).id().equalsIgnoreCase(s)){
				tools.remove(i);
			}
		}
	}

	private void updateDisplay(Graphics g) throws IOException {
		g.setColor(new Color(169, 169, 169));
		g.fillRect(0, 0, 400, 170);
		g.setColor(new Color(0, 0, 0));
		g.drawRect(0, 0, 400, 170);
		g.setColor(new Color(50, 50, 50));

		for (float j = 0; j < 2; j += 1.2) {
			for (float i = 0; i < 9; i += 1.2) {
				g.drawRect((int) (12.5 + (i * 40)), (int) (27.7 + (j * 40)), 40, 40);
				cord.add(new Point((int) (12.5 + (i * 40)), (int) (27.7 + (j * 40))));
			}
		}
		for (int i = 0; i < inventory.size(); i++) {
			if (inventory.get(i).getId().equals(equiped)) {
				g.setColor(new Color(90, 90, 90));
				g.fillRect(cord.get(i).x, cord.get(i).y, 40, 40);
				g.setColor(new Color(50, 50, 50));
				g.drawRect(cord.get(i).x, cord.get(i).y, 40, 40);
			}
			inventory.get(i).draw(cord.get(i).x + 10, cord.get(i).y + 10, g);
			Font p = new Font("Dialog", Font.BOLD, 12);
			g.setFont(p);
			g.drawString(Integer.toString(inventory.get(i).getAmount()), cord.get(i).x + 20, cord.get(i).y + 10);
		}
		for (int i = 0; i < tools.size(); i++) {
			tools.get(i).draw(cord.get(i).x + 10, cord.get(i).y + 60, g);
		}
	}

	public InventoryItem[] getInventory() {
		return (InventoryItem[]) inventory.toArray();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				formMouseClicked(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGap(0, 400, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGap(0, 300, Short.MAX_VALUE)
		);
	}// </editor-fold>//GEN-END:initComponents

	private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
		// TODO add your handling code here:
	}//GEN-LAST:event_formMouseClicked


	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables
}
